===== chrome - Homepage =====
1. Contextual Summary:
     - Violation with ID "aria-required-children" has a critical impact, indicating that certain ARIA roles must contain particular children to ensure proper accessibility.
     - Violation with ID "tabindex" has a serious impact, suggesting that tabindex attribute values should not be greater than 0.

  2. Issue Description:
     - For the first violation, elements with an ARIA role requiring child roles are missing those children, which violates accessibility standards and may cause issues for assistive technologies.
     - For the second violation, tabindex attribute values on certain elements are greater than 0, which can disrupt normal keyboard navigation order.

  3. Priority:
     - The first violation has a priority of "High" due to its critical impact according to axe-core and potential significant user experience issues.
     - The second violation has a priority of "Medium" as it is serious in terms of accessibility standards but may not cause severe user experience problems.

  4. WCAG Reference:
     - For the first violation, applicable WCAG 2.2 guidelines include: cat.aria, wcag2a, wcag131, EN-301-549, and EN-9.1.3.1.
     - For the second violation, there is no direct corresponding WCAG guideline but it aligns with best practices related to keyboard accessibility (cat.keyboard).

  5. Remediation:
     - For the first violation, ensure that elements with required child roles contain them properly. For example, a listbox (role="listbox") should have listitems (role="option").
     - For the second violation, reduce the tabindex values to 0 or remove them if they are not necessary for navigation focus order customization. If tabindex needs to be used for specific reasons, use a value of 0 and ensure that elements with the same tabindex value receive appropriate focus order based on their position in the DOM or explicitly define the focus order using WAI-ARIA attributes like aria-labelledby and aria-describedby.

===== chrome - Courses - Submenu =====
1. Contextual Summary:
     - Violation 1: An element with an ARIA role that requires child roles is missing them, impacting accessibility for screen reader users and potentially breaking the structure of the page.
     - Violation 2: The `tabindex` attribute has been set to a value greater than 0 on an interactive element, creating confusion when navigating through the page using a keyboard.

  2. Issue Description:
     - Violation 1: An ARIA role requires specific child roles for proper understanding and interaction by assistive technologies. In this case, some elements with `tabindex` have children that are not allowed.
     - Violation 2: The tabindex attribute should only be used on focusable elements when needed to override the default tab order. A value greater than zero means it will jump ahead in the focus sequence, which can lead to unexpected navigation and user frustration.

  3. Priority:
     - Violation 1: Priority: Critical - This issue significantly impacts screen reader users' ability to navigate and understand the page structure.
     - Violation 2: Priority: Serious - Although this issue does not completely block access to the content, it can cause confusion when navigating with a keyboard, impacting user experience.

  4. WCAG Reference:
     - Violation 1: [WCAG 2.1 Success Criterion 4.1.2 Name that can be programmatically determined (Level A)](https://www.w3.org/TR/WCAG21/#name-programmatic) and [WCAG 1.3.1 Info and Relationships (Level A)](https://www.w3.org/TR/WCAG21/#info-and-relationships)
     - Violation 2: No direct WCAG reference, but it pertains to the principles of [Operable (POUR Principle)](https://www.w3.org/WAI/intro/pour), especially [Predictable (POUR Principle](https://www.w3.org/WAI/intro/pour#predictable)) and [Controllable (POUR Principle](https://www.w3.org/WAI/intro/pour#controllable)).

  5. Remediation:
     - Violation 1: Ensure that all elements with an ARIA role that require child roles have the appropriate children. For example, if a `listbox` has no `option`, it needs to be corrected. You may need to restructure your HTML markup or apply additional ARIA attributes to provide proper structure.
     - Violation 2: Remove any unnecessary `tabindex` values greater than zero from interactive elements and only use them when necessary to override the default tab order.

===== chrome - Study with Us - Submenu =====
1. Contextual Summary:
     - Violation 1: The page contains an element with an ARIA role that requires child roles but does not contain them, potentially causing issues for assistive technologies like screen readers.
     - Violation 2: The page includes elements with a tabindex attribute greater than 0, which can cause unexpected focus and navigation behavior.

  2. Issue Description:
     - Violation 1: An ARIA role is used on an element, but it does not have the required child roles. This can lead to confusion for screen reader users about the structure of the page.
     - Violation 2: The tabindex attribute is set on elements, causing them to receive focus unintentionally or change the order of focus during keyboard navigation.

  3. Priority:
     - Violation 1: Critical (WCAG 2.2, EN-301-549, EN-9.1.3.1)
     - Violation 2: Serious (cat.keyboard, best practice)

  4. WCAG Reference:
     - Violation 1: Guideline 13.1: Information, Identify the purpose of user interface components (Includes Success Criterion 1.3.1: Info and relationships (Level A))
     - Violation 2: Not directly applicable to WCAG 2.2 guidelines, but relevant to understanding and operating content with a keyboard (cat.keyboard)

  5. Remediation:
     - Violation 1:
       - Verify that all ARIA roles used in the page are correctly implemented according to their specification and requirements for child roles.
       - Ensure that all required child roles are present within elements that have an ARIA role with specific children requirements.
     - Violation 2:
       - Remove any unnecessary tabindex attributes from elements or set them to 0 if they should be part of the default focus order.
       - If a custom focus order is desired, use positive tabindex values only for elements that should receive focus explicitly, and keep them as low as possible (e.g., 1 or 2) to minimize unexpected navigation behavior.

===== chrome - International - Submenu =====
1. Contextual Summary:
     - Violation with ID "aria-required-children" is critical due to improper use of ARIA roles and their required children. The element with role "tablist" does not contain the appropriate children.
     - Violation with ID "tabindex" is serious because an element (topnav-skiplink) has a tabindex attribute value greater than 0, which can cause unexpected navigation order for keyboard users.

  2. Issue Description:
     - The ARIA role "tablist" requires child roles of "tabpanel" or "tab". The current page contains ul and a elements as children, which are not allowed for the tablist role.
     - An element with class "topnav-skiplink" has a tabindex attribute value greater than 0, which can cause it to receive focus before other interactive elements in the navigation order when using the keyboard. This may disrupt the intended navigation sequence and user experience.

  3. Priority:
     - Critical for the "aria-required-children" violation due to the impact on accessibility compliance (WCAG 2.1, WCAG 1.3.1, EN-301-549, EN-9.1.3.1) and potential confusion or inability for assistive technology users to navigate and interact with the content.
     - Serious for the "tabindex" violation due to impact on keyboard navigation (WCAG 2.1, Best Practice) and potential disruption of intended navigation sequence and user experience.

  4. WCAG Reference:
     - For the "aria-required-children" violation:
       - WCAG 2.1 Success Criteria 1.3.1 Info and Relationships (Information, Identify Relationships)
       - EN-301-549 Section 4.6.5 Required Children
       - EN-9.1.3.1 ARIA Roles and Properties: Required Children
     - For the "tabindex" violation:
       - WCAG 2.1 Success Criteria 2.4.3 Focus Order (Focus Order)

  5. Remediation:
     - For the "aria-required-children" violation, ensure that the ARIA role "tablist" has appropriate child roles of "tabpanel" or "tab". Update the markup as follows:

       ```html
       <div id="accordion" role="tablist">
           <!-- Include tabpanel or tab elements here -->
       </div>
       ```
     - For the "tabindex" violation, set the tabindex attribute value to 0 for all interactive elements that do not require special focus behavior. For the topnav-skiplink element, consider removing the tabindex attribute completely or setting it to 0 if necessary.

       ```html
       <a class="topnav-skiplink" href="#topnav_skipcontent">SKIP TO CONTENT</a>
       ```
       or

       ```html
       <a class="topnav-skiplink" href="#topnav_skipcontent" tabindex="0">SKIP TO CONTENT</a>
       ```

===== chrome - Contact Form =====
1. Contextual Summary:
The Contact Form page contains several accessibility issues related to ARIA roles, color contrast, HTML language declaration, form elements labeling, and select elements naming.

2. Issue Description:
- ARIA Roles: Incorrect or missing ARIA roles were found on certain elements, such as the 'image' role for non-image elements.
- Color Contrast: The color contrast between some foreground and background colors does not meet the WCAG 2 AA minimum contrast ratio thresholds.
- HTML Language: The <html> element is missing a lang attribute.
- Form Elements Labeling: Certain form elements, including input fields, do not have labels, aria-labels, or other means of providing an accessible name.
- Select Elements Naming: Some select elements do not have an accessible name provided.

3. Priority:
The ARIA roles issue has a critical priority due to its impact on screen reader users and compliance with WCAG 2.2 guidelines. The color contrast issues also have a critical priority as they affect the readability of text for some users. The HTML language declaration and form/select element labeling issues have a serious priority as they may lead to confusion or difficulty in understanding content, and do not meet WCAG 2.2 guidelines.

4. WCAG Reference:
- ARIA Roles: WCAG 2.1 Success Criteria 4.1.2 (Name, Role, Value)
- Color Contrast: WCAG 2.2 Success Criterion 1.4.3 Contrast (Minimum)
- HTML Language: WCAG 2.1 Success Criteria 3.1.1 Language of Parts (Practical Low)
- Form Elements Labeling: WCAG 2.1 Success Criteria 1.3.1 Info and Relationships (Link Purpose) (In Context), 2.4.4 Link Purpose (In Context), 2.5.3 Label in Name (Using ARIA), 3.3.2 Labels or Instructions, and 4.1.2 Name, Role, Value
- Select Elements Naming: WCAG 2.1 Success Criteria 1.3.1 Info and Relationships (Link Purpose) (In Context), 2.5.3 Label in Name (Using ARIA), and 4.1.2 Name, Role, Value

5. Remediation:
- ARIA Roles: Ensure that ARIA roles used on the page conform to valid values according to the ARIA specification. Correct any incorrect uses of ARIA roles.
- Color Contrast: Adjust the color scheme to ensure that foreground and background colors meet the WCAG 2 AA minimum contrast ratio thresholds for readability.
- HTML Language: Add a lang attribute to the <html> element, specifying the primary language used on the page.
- Form Elements Labeling: Provide explicit labels for all form elements using appropriate HTML markup (<label> tags) or ARIA attributes (aria-label/aria-labelledby). If a label cannot be provided visually, provide an accessible name via ARIA attributes.
- Select Elements Naming: Ensure that select elements have an accessible name provided through either explicit labels, ARIA attributes (aria-label/aria-labelledby), or the value attribute if the element is programmatically determined.
